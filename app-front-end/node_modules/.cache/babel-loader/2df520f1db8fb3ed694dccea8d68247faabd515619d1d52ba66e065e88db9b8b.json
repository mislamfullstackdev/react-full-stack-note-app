{"ast":null,"code":"var _jsxFileName = \"/Users/mislam/Desktop/react-full-stack-note-app/app-front-end/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// Added dummy css for visualization\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  // Get api\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/notes\");\n        const notes = await response.json();\n        setNotes(notes);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const handleAddNote = event => {\n    event.preventDefault();\n    console.log(title);\n    console.log(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: handleAddNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"Note Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"note.title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"note.content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, \"\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"aofZgIjzCxFcrcdspWBgR67bTgg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","fetchNotes","response","fetch","json","e","console","log","title","setTitle","content","setContent","handleAddNote","event","preventDefault","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","_c","$RefreshReg$"],"sources":["/Users/mislam/Desktop/react-full-stack-note-app/app-front-end/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\n// Added dummy css for visualization\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  // Get api\n  useEffect(()=>{\n    const fetchNotes = async () => {\n      try{\n        const response = await fetch(\n          \"http://localhost:5000/api/notes\"\n        );\n        const notes = await response.json();\n        setNotes(notes);\n      }catch(e){\n        console.log(e);\n      }\n    };\n    fetchNotes();\n  }, []);\n\n  const [title, setTitle] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n\n  const handleAddNote = (event: React.FormEvent) => {\n    event.preventDefault();\n    console.log(title)\n    console.log(content)\n  }\n\n  return(\n    <div className=\"app-container\">\n      <form className=\"note-form\" onSubmit={handleAddNote}>\n        <input \n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"Note Title\" required>\n        </input>\n        <textarea \n          value={content}\n          onChange={(event) => setContent(event.target.value)}\n          placeholder=\"Content\" rows={10} required>\n        </textarea>\n        <button type=\"submit\">Add Note</button>\n      </form>\n      <div className=\"notes-grid\">\n        \n          <div className=\"note-item\" key=\"\">\n            <div className=\"notes-header\">\n              <button>x</button>\n            </div>\n            <h2>note.title</h2>\n            <p>note.content</p>\n          </div>\n       \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}